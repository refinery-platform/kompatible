language: python
cache: pip
python:
- 2.7
- 3.6
sudo: required

env:
  global:
  # This moves Kubernetes specific config files.
  - CHANGE_MINIKUBE_NONE_USER=true
  - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'
  - KUBERNETES_VERSION=v1.9.0  # TODO: Test other versions
  - KUBERNETES_SDK_VERSION='7.0.0'
  matrix:
  - TARGET=docker
  - TARGET=kompatible

before_install:
# Tips for Kubernetes on Travis come from:
# https://blog.travis-ci.com/2017-10-26-running-kubernetes-on-travis-ci-with-minikube
# Later updated by:
# https://github.com/LiliC/travis-minikube/blob/master/.travis.yml

# Download kubectl, which is a requirement for using minikube.
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/$KUBERNETES_VERSION/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
# Download minikube.
- curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.2/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
- sudo minikube start --vm-driver=none --kubernetes-version=$KUBERNETES_VERSION
# Fix the kubectl context, as it's often stale.
- minikube update-context
# Wait for Kubernetes to be up and ready.
- until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; echo "waiting for kubernetes"; done

- kubectl cluster-info
# Verify kube-addon-manager.
# kube-addon-manager is responsible for managing other kubernetes components, such as kube-dns, dashboard, storage-provisioner..
- until kubectl -n kube-system get pods -lcomponent=kube-addon-manager -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; echo "waiting for kube-addon-manager"; kubectl get pods --all-namespaces; done
# Wait for kube-dns to be ready.
- until kubectl -n kube-system get pods -lk8s-app=kube-dns -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; echo "waiting for kube-dns"; kubectl get pods --all-namespaces; done
## Create example Redis deployment on Kubernetes.
#- kubectl run travis-example --image=redis --labels="app=travis-example"
## Make sure created pod is scheduled and running.
#- until kubectl -n default get pods -lapp=travis-example -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; echo "waiting for travis-example deploymentavailable"; kubectl get pods -n default; done

install:
- pip install -r requirements-dev.txt
- pip install -r requirements.txt
- pip install kubernetes==$KUBERNETES_SDK_VERSION

script: "./test.sh"

deploy:
  provider: pypi
  distributions: sdist bdist_wheel
  user: mccalluc
  password:
    secure: iczHLDyUFOgdJepUajb3GeXyQIlrzMqtOPd+sVnflFbJQaOTOC3rNQOxO6cP1+TIimCkrCEcyH5DdAFBEQWTZcwC0wC0Wj3z1org8f4ZsljoeTtzPaDR2z0vg6DBeKcVBndVdRPGh0rXGNUckfh/wKiy/G/qeqKTqL2CaDcZYBmvecjnA35E3IklSvTAgK0WhI6zMBgrNObI4i3iTZ3sAGo7HhLe7Ew13VT1zSY6k12r9dz1RqoRBAgcsbzYFihfCMbUQkq0DSy62pMoLznEp3nZnSsVjr1DkmEMMh8PIKSKae+zJmgfMU+m5y9rfO7nszWfeQE2t9A/IRrEUXM6EzRFFqQ3NApz6FhsjoLBkQJFPhQbKUnKi9xOp1CVtelNMpx1n0wQjR3CrsFSR0u5bwU/skuLovWq58dx+CNIdxmcj9zzABS0s58GI9MRbsRh0JM7vSzYyPiFiXEK2A372dLclvVlGGmXbL1GeG5C13yyL8BsNUfq2LAlCZ2PNmLJhn8h7TeSYzVC5JcA/R2LdA/VR9AdTwZVXuMSSrwYCM/RE5FWQN0O9c9J8IZ/YCOyYe94SBvOTe/8dvzatd9MzMNy1XxNu9ZMF4w7phoeqAlov6wfWCbEu3+nFV1l/N2iOJg8B5e7m/xjLcIHQIqBgztdzYv9fFdZsROrp2XxdO0=
  on:
    branch: master
    python: 3.6
